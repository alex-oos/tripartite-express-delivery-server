Index: src/main/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>express:\n  sto:\n    appKey: CAKakHJIOTyuGko\n    secretKey: 7RrimcFVGUk2mK5uuCVZYXWVjbt4SpCv\n    code: CAKakHJIOTyuGko\n    url: http://cloudinter-linkgatewaytest.sto.cn/gateway/link.do\n    toAppkey: market_message\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/application-test.yml b/src/main/resources/application-test.yml
--- a/src/main/resources/application-test.yml	
+++ b/src/main/resources/application-test.yml	
@@ -1,7 +1,4 @@
-express:
-  sto:
-    appKey: CAKakHJIOTyuGko
-    secretKey: 7RrimcFVGUk2mK5uuCVZYXWVjbt4SpCv
-    code: CAKakHJIOTyuGko
-    url: http://cloudinter-linkgatewaytest.sto.cn/gateway/link.do
-    toAppkey: market_message
+stoUrl:
+  url: http://cloudinter-linkgatewaytest.sto.cn/gateway/link.do
+zto:
+  url: https://japi-test.zto.com/zto.msg.sms.checkBillCode
Index: src/main/java/com/avia/service/impl/STOServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/service/impl/STOServiceImpl.java b/src/main/java/com/avia/service/impl/StoServiceImpl.java
rename from src/main/java/com/avia/service/impl/STOServiceImpl.java
rename to src/main/java/com/avia/service/impl/StoServiceImpl.java
--- a/src/main/java/com/avia/service/impl/STOServiceImpl.java	
+++ b/src/main/java/com/avia/service/impl/StoServiceImpl.java	
@@ -1,11 +1,12 @@
 package com.avia.service.impl;
 
 import com.alibaba.fastjson2.JSONObject;
-import com.avia.config.STOConfiguration;
-import com.avia.service.STOService;
+import com.avia.config.StoConfiguration;
+import com.avia.service.StoService;
 import com.avia.util.BaseUtil;
 import com.avia.util.OkHttpUtils;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
 
 import javax.annotation.Resource;
@@ -14,10 +15,13 @@
 
 @Slf4j
 @Service
-public class STOServiceImpl implements STOService {
+public class StoServiceImpl implements StoService {
 
     @Resource
-    private STOConfiguration stoConfiguration;
+    private StoConfiguration stoConfiguration;
+
+    @Value("${stoUrl}")
+    private String url ;
 
     @Override
     public Boolean verify(String mailNo) {
@@ -36,7 +40,7 @@
         paramMap.put("to_appkey", stoConfiguration.getAppKey());
         paramMap.put("to_code", stoConfiguration.getAppKey());
         paramMap.put("data_digest", dataDigest);
-        String res = OkHttpUtils.builder().url(stoConfiguration.getUrl()).addParam(paramMap).post(false).async();
+        String res = OkHttpUtils.builder().url(url).addParam(paramMap).post(false).async();
         log.info("响应为：{}", res);
 
         JSONObject response = JSONObject.parse(res);
Index: src/main/java/com/avia/controller/ExpressDeliveryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.avia.controller;\n\nimport com.avia.service.BaseService;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\n\n@RestController\npublic class ExpressDeliveryController {\n\n    @Resource\n    private BaseService baseService;\n\n    @GetMapping(value = \"/mailNo\")\n    public String sendSms(@RequestParam String mailNo) {\n\n        return baseService.sendSms(mailNo);\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/controller/ExpressDeliveryController.java b/src/main/java/com/avia/controller/ExpressDeliveryController.java
--- a/src/main/java/com/avia/controller/ExpressDeliveryController.java	
+++ b/src/main/java/com/avia/controller/ExpressDeliveryController.java	
@@ -1,6 +1,8 @@
 package com.avia.controller;
 
 import com.avia.service.BaseService;
+import com.avia.service.StoService;
+import com.avia.service.ZtoService;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
@@ -13,6 +15,7 @@
     @Resource
     private BaseService baseService;
 
+
     @GetMapping(value = "/mailNo")
     public String sendSms(@RequestParam String mailNo) {
 
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>target/\n!.mvn/wrapper/maven-wrapper.jar\n!**/src/main/**/target/\n!**/src/test/**/target/\n\n### IntelliJ IDEA ###\n.idea/modules.xml\n.idea/jarRepositories.xml\n.idea/compiler.xml\n.idea/libraries/\n*.iws\n*.iml\n*.ipr\n\n### Eclipse ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### NetBeans ###\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\nbuild/\n!**/src/main/**/build/\n!**/src/test/**/build/\n\n### VS Code ###\n.vscode/\n\n### Mac OS ###\n.DS_Store\nlogs\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	
+++ b/.gitignore	
@@ -36,4 +36,4 @@
 
 ### Mac OS ###
 .DS_Store
-logs
+*.log
Index: src/main/java/com/avia/config/ZtoConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/config/ZtoConfiguration.java b/src/main/java/com/avia/config/ZtoConfiguration.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/avia/config/ZtoConfiguration.java	
@@ -0,0 +1,16 @@
+package com.avia.config;
+
+
+import lombok.Getter;
+import org.springframework.context.annotation.Configuration;
+
+@Getter
+@Configuration
+public class ZtoConfiguration {
+
+
+    private String appKey = "d5ccc367ba473bdbc931b";
+
+    private String secretKey = "906a03049fd8d6e78c43196a401509f9";
+
+}
Index: src/main/java/com/avia/listener/StoListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.avia.listener;\n\nimport com.avia.event.StoEvent;\nimport com.avia.service.STOService;\nimport org.springframework.context.event.EventListener;\nimport org.springframework.scheduling.annotation.Async;\n\nimport javax.annotation.Resource;\n\npublic class StoListener {\n\n\n    @Resource\n    private STOService stoService;\n    // 为了更快使用监听器，后期也可以不用，监听器需要增加一个发布者，发布者，发布一个内容，然后监听器监听到内容，开始发送消息，多用于短信服务，或消息分发\n    @EventListener\n    @Async\n    public void onApplicationEvent(StoEvent event) {\n\n        stoService.sendSmsResultPush();\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/listener/StoListener.java b/src/main/java/com/avia/listener/StoListener.java
--- a/src/main/java/com/avia/listener/StoListener.java	
+++ b/src/main/java/com/avia/listener/StoListener.java	
@@ -1,7 +1,7 @@
 package com.avia.listener;
 
 import com.avia.event.StoEvent;
-import com.avia.service.STOService;
+import com.avia.service.StoService;
 import org.springframework.context.event.EventListener;
 import org.springframework.scheduling.annotation.Async;
 
@@ -11,7 +11,7 @@
 
 
     @Resource
-    private STOService stoService;
+    private StoService stoService;
     // 为了更快使用监听器，后期也可以不用，监听器需要增加一个发布者，发布者，发布一个内容，然后监听器监听到内容，开始发送消息，多用于短信服务，或消息分发
     @EventListener
     @Async
Index: src/main/java/com/avia/service/impl/ZtoServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/service/impl/ZtoServiceImpl.java b/src/main/java/com/avia/service/impl/ZtoServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/avia/service/impl/ZtoServiceImpl.java	
@@ -0,0 +1,107 @@
+package com.avia.service.impl;
+
+
+import com.alibaba.fastjson.JSONObject;
+import com.avia.config.ZtoConfiguration;
+import com.avia.service.ZtoService;
+import com.zto.zop.ZopClient;
+import com.zto.zop.ZopPublicRequest;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
+import org.springframework.stereotype.Service;
+
+import javax.annotation.Resource;
+
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+
+import static com.zto.zop.EncryptionType.MD5;
+
+
+@Slf4j
+@Service
+public class ZtoServiceImpl implements ZtoService {
+
+    @Resource
+    private ZtoConfiguration ztoConfiguration;
+
+    @Value("${zto.url}")
+    private String url;
+
+    @Resource
+    private ThreadPoolTaskExecutor threadPoolTaskExecutor;
+
+    @Override
+    public Boolean verify(String mailNo) {
+
+
+        Map<Object, Object> params = new HashMap<>();
+        params.put("billCode", mailNo);
+        return requestZto(params);
+    }
+
+    @Override
+    public Boolean isCanSendSms(String companyCode, String billCode) {
+
+
+        Map<Object, Object> params = new HashMap<>();
+        params.put("companyCode", companyCode);
+        params.put("billCode", billCode);
+        return requestZto(params);
+    }
+
+    @Override
+    public Boolean sendSms(String billCode, String mobile, String bizld, String content, String smsSign) {
+
+        Map<Object, Object> params = new HashMap<>();
+        params.put("billCode", billCode);
+        params.put("mobile", mobile);
+        params.put("bizId", bizld);
+        params.put("content", content);
+        params.put("smsSign", smsSign);
+        return requestZto(params);
+    }
+
+
+    public Boolean requestZto(Map<Object, Object> params) {
+
+        ZopClient client = new ZopClient(ztoConfiguration.getAppKey(), ztoConfiguration.getSecretKey());
+        ZopPublicRequest request = new ZopPublicRequest();
+        request.setBody(JSONObject.toJSONString(params));
+        request.setUrl(url);
+        request.setBase64(true);
+        request.setEncryptionType(MD5);
+        request.setTimestamp(null);
+
+
+        CompletableFuture<Boolean> future = CompletableFuture.supplyAsync(() -> {
+            try {
+                String response = client.execute(request);
+                log.info("response is {}", response);
+                JSONObject jsonObject = JSONObject.parseObject(response);
+                return jsonObject.getBoolean("status");
+            } catch (IOException e) {
+                throw new RuntimeException(e);
+            }
+        }, threadPoolTaskExecutor);
+
+        try {
+            return future.get();
+        } catch (InterruptedException | ExecutionException e) {
+            throw new RuntimeException(e);
+        }
+
+
+    }
+
+    public static void main(String[] args) {
+
+        ZtoServiceImpl ztoService = new ZtoServiceImpl();
+        ztoService.verify("73100039415086");
+    }
+
+}
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.7.1</version>\n    </parent>\n\n    <groupId>org.example</groupId>\n    <artifactId>tripartite-express-delivery-server</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n    <dependencies>\n        <!--springboot 核心依赖-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n        <!--springboot 可执行web类    -web启动器-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web-services</artifactId>\n        </dependency>\n        <!--        参数校验-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-validation</artifactId>\n        </dependency>\n        <!-- yml配置处理器 -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <!--        aop-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n\n        <!--lombok 快速开发工具-->\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>net.logstash.logback</groupId>\n            <artifactId>logstash-logback-encoder</artifactId>\n            <version>7.4</version>\n        </dependency>\n\n        <!--数据库相关-->\n        <!--mybatis-plus-->\n        <!--        <dependency>-->\n        <!--            <groupId>com.baomidou</groupId>-->\n        <!--            <artifactId>mybatis-plus-boot-starter</artifactId>-->\n        <!--            <version>3.5.3.1</version>-->\n        <!--        </dependency>-->\n        <!--mysql-->\n        <!--        <dependency>-->\n        <!--            <groupId>mysql</groupId>-->\n        <!--            <artifactId>mysql-connector-java</artifactId>-->\n        <!--&lt;!&ndash;            <scope>runtime</scope>&ndash;&gt;-->\n        <!--            <version>8.0.33</version>-->\n        <!--        </dependency>-->\n        <!--        sqlite-->\n        <!--        <dependency>-->\n        <!--            <groupId>org.xerial</groupId>-->\n        <!--            <artifactId>sqlite-jdbc</artifactId>-->\n        <!--        </dependency>-->\n        <!--druid连接池-->\n        <!--        <dependency>-->\n        <!--            <groupId>com.alibaba</groupId>-->\n        <!--            <artifactId>druid-spring-boot-starter</artifactId>-->\n        <!--            <version>1.2.16</version>-->\n        <!--        </dependency>-->\n        <!-- mybatis plus 代码生成器依赖 -->\n        <!--        <dependency>-->\n        <!--            <groupId>com.baomidou</groupId>-->\n        <!--            <artifactId>mybatis-plus-generator</artifactId>-->\n        <!--            <version>3.5.3.1</version>-->\n        <!--        </dependency>-->\n\n        <!-- JWT令牌机制-->\n        <!--        <dependency>-->\n        <!--            <groupId>io.jsonwebtoken</groupId>-->\n        <!--            <artifactId>jjwt</artifactId>-->\n        <!--            <version>0.9.1</version>-->\n        <!--        </dependency>-->\n\n\n        <!-- 一些工具类依赖 -->\n        <!--        hutools工具包-->\n        <!--        <dependency>-->\n        <!--            <groupId>cn.hutool</groupId>-->\n        <!--            <artifactId>hutool-all</artifactId>-->\n        <!--            <version>5.8.18</version>-->\n        <!--        </dependency>-->\n        <!--            csv 工具包-->\n        <!--        <dependency>-->\n        <!--            <groupId>net.sourceforge.javacsv</groupId>-->\n        <!--            <artifactId>javacsv</artifactId>-->\n        <!--            <version>2.0</version>-->\n        <!--        </dependency>-->\n        <!--json解析常用-->\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>2.0.32</version>\n        </dependency>\n\n        <!--okhttp3请求包-->\n        <dependency>\n            <groupId>com.squareup.okhttp3</groupId>\n            <artifactId>okhttp</artifactId>\n            <version>5.0.0-alpha.11</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>1.16.1</version>\n        </dependency>\n\n\n        <!--一些快速开发的辅助工具-->\n        <!--        快速部署工具-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <!--配置注解器-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n    </dependencies>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -14,8 +14,9 @@
     <version>1.0-SNAPSHOT</version>
 
     <properties>
-        <maven.compiler.source>11</maven.compiler.source>
-        <maven.compiler.target>11</maven.compiler.target>
+        <!--        jdk 版本-->
+        <!--        <maven.compiler.source>11</maven.compiler.source>-->
+        <!--        <maven.compiler.target>11</maven.compiler.target>-->
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
     <dependencies>
@@ -67,60 +68,6 @@
             <version>7.4</version>
         </dependency>
 
-        <!--数据库相关-->
-        <!--mybatis-plus-->
-        <!--        <dependency>-->
-        <!--            <groupId>com.baomidou</groupId>-->
-        <!--            <artifactId>mybatis-plus-boot-starter</artifactId>-->
-        <!--            <version>3.5.3.1</version>-->
-        <!--        </dependency>-->
-        <!--mysql-->
-        <!--        <dependency>-->
-        <!--            <groupId>mysql</groupId>-->
-        <!--            <artifactId>mysql-connector-java</artifactId>-->
-        <!--&lt;!&ndash;            <scope>runtime</scope>&ndash;&gt;-->
-        <!--            <version>8.0.33</version>-->
-        <!--        </dependency>-->
-        <!--        sqlite-->
-        <!--        <dependency>-->
-        <!--            <groupId>org.xerial</groupId>-->
-        <!--            <artifactId>sqlite-jdbc</artifactId>-->
-        <!--        </dependency>-->
-        <!--druid连接池-->
-        <!--        <dependency>-->
-        <!--            <groupId>com.alibaba</groupId>-->
-        <!--            <artifactId>druid-spring-boot-starter</artifactId>-->
-        <!--            <version>1.2.16</version>-->
-        <!--        </dependency>-->
-        <!-- mybatis plus 代码生成器依赖 -->
-        <!--        <dependency>-->
-        <!--            <groupId>com.baomidou</groupId>-->
-        <!--            <artifactId>mybatis-plus-generator</artifactId>-->
-        <!--            <version>3.5.3.1</version>-->
-        <!--        </dependency>-->
-
-        <!-- JWT令牌机制-->
-        <!--        <dependency>-->
-        <!--            <groupId>io.jsonwebtoken</groupId>-->
-        <!--            <artifactId>jjwt</artifactId>-->
-        <!--            <version>0.9.1</version>-->
-        <!--        </dependency>-->
-
-
-        <!-- 一些工具类依赖 -->
-        <!--        hutools工具包-->
-        <!--        <dependency>-->
-        <!--            <groupId>cn.hutool</groupId>-->
-        <!--            <artifactId>hutool-all</artifactId>-->
-        <!--            <version>5.8.18</version>-->
-        <!--        </dependency>-->
-        <!--            csv 工具包-->
-        <!--        <dependency>-->
-        <!--            <groupId>net.sourceforge.javacsv</groupId>-->
-        <!--            <artifactId>javacsv</artifactId>-->
-        <!--            <version>2.0</version>-->
-        <!--        </dependency>-->
-        <!--json解析常用-->
         <dependency>
             <groupId>com.alibaba</groupId>
             <artifactId>fastjson</artifactId>
@@ -133,7 +80,7 @@
             <artifactId>okhttp</artifactId>
             <version>5.0.0-alpha.11</version>
         </dependency>
-
+        <!--        加密解密-->
         <dependency>
             <groupId>commons-codec</groupId>
             <artifactId>commons-codec</artifactId>
@@ -154,7 +101,14 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-configuration-processor</artifactId>
             <optional>true</optional>
+        </dependency>
+        <!--        中通快递 -->
+        <dependency>
+            <groupId>com.zto.zop</groupId>
+            <artifactId>zopsdk</artifactId>
+            <version>0.11</version>
         </dependency>
     </dependencies>
 
+
 </project>
Index: src/main/java/com/avia/service/impl/BaseServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.avia.service.impl;\n\nimport com.avia.service.BaseService;\nimport com.avia.service.STOService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.ExecutionException;\n\n@Slf4j\n@Service\npublic class BaseServiceImpl implements BaseService {\n\n    @Resource\n    private STOService stoService;\n\n    @Resource\n    private ThreadPoolTaskExecutor threadPoolExecutor;\n\n    @Override\n    public String sendSms(String mailNo) {\n        // 1，先验证是哪一家快递公司\n        String companyName = this.verifyExpressCompany(mailNo);\n        // 2.发送快递\n        // 3.拿到结果\n        switch (companyName) {\n            case \"STO\":\n                stoService.sendSms();\n                stoService.sendSmsResultPush();\n                return \"aa\";\n            case \"demo\":\n                return \"demo\";\n            default:\n                return \"数据为空\";\n        }\n\n\n    }\n\n    @Override\n    public String verifyExpressCompany(String mailNo) {\n\n        List<CompletableFuture<String>> list = new ArrayList<>();\n        // 申通快递\n        CompletableFuture<String> stoFuture = CompletableFuture.supplyAsync(() -> {\n            Boolean verify = stoService.verify(mailNo);\n            if (verify) {\n                return \"STO\";\n            }\n            return null;\n        }, threadPoolExecutor);\n        // 其他快递公司\n\n\n        //\n\n\n        list.add(stoFuture);\n        // 获取所有结果\n        for (CompletableFuture<String> booleanCompletableFuture : list) {\n            try {\n                String companyName = booleanCompletableFuture.get();\n                if (Objects.nonNull(companyName)) {\n                    return companyName;\n                }\n            } catch (InterruptedException e) {\n                throw new RuntimeException(e);\n            } catch (ExecutionException e) {\n                throw new RuntimeException(e);\n            }\n\n        }\n        return null;\n    }\n\n    public CompletableFuture<Boolean> sendSmsAsync(String mailNo) {\n\n        return CompletableFuture.supplyAsync(() -> {\n            return stoService.verify(mailNo);\n        }, threadPoolExecutor);\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/service/impl/BaseServiceImpl.java b/src/main/java/com/avia/service/impl/BaseServiceImpl.java
--- a/src/main/java/com/avia/service/impl/BaseServiceImpl.java	
+++ b/src/main/java/com/avia/service/impl/BaseServiceImpl.java	
@@ -1,7 +1,7 @@
 package com.avia.service.impl;
 
 import com.avia.service.BaseService;
-import com.avia.service.STOService;
+import com.avia.service.StoService;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 import org.springframework.stereotype.Service;
@@ -18,7 +18,7 @@
 public class BaseServiceImpl implements BaseService {
 
     @Resource
-    private STOService stoService;
+    private StoService stoService;
 
     @Resource
     private ThreadPoolTaskExecutor threadPoolExecutor;
Index: src/main/java/com/avia/service/ZtoService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/service/ZtoService.java b/src/main/java/com/avia/service/ZtoService.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/avia/service/ZtoService.java	
@@ -0,0 +1,28 @@
+package com.avia.service;
+
+public interface ZtoService {
+
+    Boolean  verify(String trackingNumber);
+
+    /**
+     * 运单是否可代发短信校验
+     * @param companyCode
+     * @param type
+     * @return
+     */
+    Boolean  isCanSendSms(String companyCode, String billCode);
+
+    /**
+     * 发送短信
+     * @param billCode
+     * @param mobile
+     * @param bizld
+     * @param content
+     * @param smsSign
+     * @return
+     */
+    Boolean sendSms(String billCode,String mobile,String bizld,String content,String smsSign);
+
+
+
+}
Index: src/main/java/com/avia/service/STOService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/service/STOService.java b/src/main/java/com/avia/service/StoService.java
rename from src/main/java/com/avia/service/STOService.java
rename to src/main/java/com/avia/service/StoService.java
--- a/src/main/java/com/avia/service/STOService.java	
+++ b/src/main/java/com/avia/service/StoService.java	
@@ -3,7 +3,7 @@
 /**
  * 申通服务
  */
-public interface STOService {
+public interface StoService {
 
     /**
      * 验证短信发送接口
Index: src/main/java/com/avia/config/STOConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/avia/config/STOConfiguration.java b/src/main/java/com/avia/config/StoConfiguration.java
rename from src/main/java/com/avia/config/STOConfiguration.java
rename to src/main/java/com/avia/config/StoConfiguration.java
--- a/src/main/java/com/avia/config/STOConfiguration.java	
+++ b/src/main/java/com/avia/config/StoConfiguration.java	
@@ -7,17 +7,15 @@
 
 @Getter
 @Configuration
-@ConfigurationProperties(prefix = "express.sto")
-public class STOConfiguration {
+public class StoConfiguration {
 
-    private String appKey;
 
-    private String secretKey;
+    private String appKey = "CAKakHJIOTyuGko";
 
-    private String code;
+    private String secretKey = "7RrimcFVGUk2mK5uuCVZYXWVjbt4SpCv";
 
-    private String url;
+    private String code = "CAKakHJIOTyuGko";
 
-    private String toAppkey;
+    private String toAppkey = "market_message";
 
 }
